#### 1. Классификация ИС по степени автоматизации и сфере применения. Классификация ИС по типу обрабатываемых данных.
- **Ответ**: 
  - **По степени автоматизации**: 
    - Ручные: без технических средств (например, бумажный учет).
    - Автоматические: автономная работа (например, поисковики).
    - Автоматизированные: человек + техника, рутинные задачи автоматизированы.
  - **По сфере применения**: бизнес (финансы, производство), техника, общественные системы.
  - **По типу данных**: текстовые, числовые, мультимедийные (в лекциях не указано явно).

#### 2. Классификация ИС по характеру обработки данных и уровню управления. Интегрированные (ERP) ИС, характеристика задач.
- **Ответ**: 
  - **По характеру обработки**: пакетная, реального времени, транзакционная, аналитическая (вывод из лекций).
  - **По уровню управления**: операционный, тактический, стратегический (предположительно).
  - **ERP-системы**: интеграция процессов, управление ресурсами, автоматизация учета, планирования.

#### 3. САПР системы и взаимодействие с CAD, CAM, CAE, ERP. Процесс взаимодействия.
- **Ответ**: 
  - САПР: системы автоматизированного проектирования (CAD — проектирование, CAM — производство, CAE — анализ).
  - Взаимодействие: CAD создает модели, CAM управляет производством, CAE анализирует, ERP интегрирует данные. Процесс: проектирование → анализ → производство → управление ресурсами.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 4. Информационно-поисковые системы: характеристика, особенности, примеры.
- **Ответ**: 
  - **Характеристика**: автоматические ИС для поиска данных.
  - **Особенности**: высокая скорость, автономность.
  - **Примеры**: Google, Яндекс.

#### 5. Автоматизированные ИС: характеристика, особенности, примеры.
- **Ответ**: 
  - **Характеристика**: сочетание человека и техники, автоматизация рутинных задач.
  - **Особенности**: человек управляет, техника обрабатывает.
  - **Примеры**: системы учета, планирования (в лекциях не указаны явно).

#### 6. Фактографические БД: определение, нормативные документы.
- **Ответ**: 
  - **Определение**: базы данных, хранящие фактические данные (например, числовые показатели, события).
  - **Нормативные документы**: в РФ — ГОСТ 7.1-2003 (библиографические БД), международные стандарты ISO.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 7. Документальные БД: определение, нормативные документы.
- **Ответ**: 
  - **Определение**: базы данных, хранящие документы (тексты, изображения).
  - **Нормативные документы**: ГОСТ 7.1-2003, стандарты ISO для управления документами.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 8. Подсистемы ИС: состав и назначение.
- **Ответ**: 
  - **Состав**: аппаратное обеспечение, ПО, данные, персонал, организационная поддержка.
  - **Назначение**: функциональные (решение задач), обеспечивающие (техническая поддержка).

#### 9. Жизненный цикл ИС: характеристика, модели, особенности, ограничения.
- **Ответ**: 
  - **Характеристика**: от создания до вывода, включает анализ, проектирование, реализацию, внедрение, сопровождение.
  - **Модели**: каскадная (последовательная), спиральная (итеративная).
  - **Особенности и ограничения**: 
    - Каскадная: проста, но негибкая.
    - Спиральная: гибкая, но сложна и дорога.

#### 10. Каскадная модель ЖЦ ИС: ограничения, преимущества, недостатки.
- **Ответ**: 
  - **Ограничения**: для стабильных требований.
  - **Преимущества**: простота, четкие этапы, документация.
  - **Недостатки**: позднее выявление ошибок, сложность изменений.

#### 11. Поэтапная модель ЖЦ ИС с промежуточным контролем: ограничения, преимущества, недостатки.
- **Ответ**: 
  - **Характеристика**: каскадная модель с проверками на этапах.
  - **Ограничения**: негибкость при изменениях.
  - **Преимущества**: контроль качества, снижение рисков.
  - **Недостатки**: увеличение сроков из-за проверок.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 12. Спиральная модель ЖЦ ИС: ограничения, преимущества, недостатки.
- **Ответ**: 
  - **Ограничения**: сложность, высокая стоимость.
  - **Преимущества**: анализ рисков, гибкость, ранние прототипы.
  - **Недостатки**: зависимость от квалификации, сложное управление.

#### 13. Методология, метод, методика проектирования ИС. Методология ГОСТ серии 34.
- **Ответ**: 
  - **Понятия**: 
    - Методология: общий подход (ГОСТ 34).
    - Метод: способ реализации (SADT).
    - Методика: процедура применения.
  - **ГОСТ 34**: для АСУ, каскадная модель, стадии: ТЭО, ТЗ, эскизный/технический проекты, внедрение.

#### 14. Стандарты, регламентирующие ЖЦ ИС. Международные стандарты, их модели ЖЦ.
- **Ответ**: 
  - **Стандарты**: ГОСТ Р ИСО/МЭК 12207-02 (ЖЦ ИС).
  - **Международные**: ISO/IEC 12207 (итеративная модель), ISO/IEC 15288.
  - В лекциях частично, дополнено общими знаниями.

#### 15. ГОСТ Р 59793: характеристика, методология, модель ЖЦ, анализ.
- **Ответ**: 
  - **Характеристика**: стандарт для разработки ИС (предположительно, аналог ГОСТ 34).
  - **Методология**: структурированная, каскадная.
  - **Модель ЖЦ**: последовательная.
  - **Анализ**: подходит для крупных проектов.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 16. ГОСТ Р ИСО/МЭК 12207-2010: характеристика, методология, модель ЖЦ, анализ.
- **Ответ**: 
  - **Характеристика**: структура ЖЦ, процессы: разработка, эксплуатация, сопровождение.
  - **Методология**: универсальная, адаптируемая.
  - **Модель ЖЦ**: итеративная.
  - **Анализ**: гибкость, но требует адаптации.

#### 17. ГОСТ Р ИСО/МЭК 15288: характеристика, методология, модель ЖЦ, анализ.
- **Ответ**: 
  - **Характеристика**: стандарт для ЖЦ систем, включая ИС.
  - **Методология**: системный подход.
  - **Модель ЖЦ**: гибкая, итеративная.
  - **Анализ**: подходит для сложных систем.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 18. Microsoft Solution Framework (MSF): характеристика, методология, модель ЖЦ, анализ.
- **Ответ**: 
  - **Характеристика**: методология Microsoft для разработки ПО.
  - **Методология**: итеративная, с фокусом на команде.
  - **Модель ЖЦ**: спиральная, с фазами (планирование, разработка, стабилизация).
  - **Анализ**: гибкость, но требует квалификации.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 19. Extreme Programming (XP): характеристика, методология, модель ЖЦ, анализ.
- **Ответ**: 
  - **Характеристика**: гибкая методология для разработки ПО.
  - **Методология**: итеративная, с парным программированием, тестированием.
  - **Модель ЖЦ**: инкрементальная.
  - **Анализ**: подходит для малых команд, но сложна для крупных проектов.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 20. PMBoK (PMI): характеристика, методология, модель ЖЦ, анализ.
- **Ответ**: 
  - **Характеристика**: руководство по управлению проектами, 10 областей знаний.
  - **Методология**: универсальная, адаптируемая.
  - **Модель ЖЦ**: поддерживает каскадную/итеративную.
  - **Анализ**: эффективна для крупных проектов, сложна для малых.

#### 21. Методология канонического проектирования ИС: стадии, этапы, особенности, область использования.
- **Ответ**: 
  - **Стадии**: 
    1. Требования: обследование, ТТЗ.
    2. Концепция: НИР, варианты.
    3. ТЗ: разработка.
    4. Эскизный проект: предварительные решения.
    5. Технический проект: проектные решения.
    6. Рабочая документация: адаптация ПО.
    7. Ввод: пусконаладка, испытания.
    8. Сопровождение: обслуживание.
  - **Особенности**: каскадная модель.
  - **Область**: крупные проекты.

#### 22. Системное проектирование: принципы, практическая полезность.
- **Ответ**: 
  - **Принципы**: целостность, декомпозиция, иерархичность.
  - **Полезность**: структурирует разработку, минимизирует ошибки.

#### 23. Принципы системного проектирования: сверху-вниз и снизу-вверх, анализ подходов.
- **Ответ**: 
  - **Сверху-вниз**: от общего к частному, упрощает планирование.
  - **Снизу-вверх**: от компонентов к системе, подходит для интеграции.
  - **Анализ**: сверху-вниз — для новых систем, снизу-вверх — для существующих.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 24. Поиск технических решений при проектировании ИС: подходы, характеристика.
- **Ответ**: 
  - **Подходы**: анализ требований, выбор типовых решений, настройка ППП.
  - **Характеристика**: ориентированы на минимизацию затрат и рисков.

#### 25. Моделирование ИС: методологии и нотации.
- **Ответ**: 
  - **Методологии**: SADT (IDEF0), BPMN, UML.
  - **Нотации**: 
    - SADT: блочно-дуговая графика.
    - BPMN: процессы, трансляция в BPEL.
    - UML: классы, процессы, объекты.

#### 26. Стадии проектирования ИС: нормативные документы, структура процесса.
- **Ответ**: 
  - **Стадии**: см. вопрос 21.
  - **Документы**: ГОСТ 34.601-90, ГОСТ 34.602-89, ГОСТ 34.201-89.
  - **Структура**: последовательные этапы.

#### 27. Стадии проектирования ИС по ГОСТ Р 59793: описание, состав работ.
- **Ответ**: 
  - **Описание**: предположительно, аналог ГОСТ 34 (ТЭО, ТЗ, проекты, внедрение).
  - **Состав работ**: анализ, проектирование, разработка, испытания.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 28. Этап обследования: когда проводится, определение стратегии, детальный анализ.
- **Ответ**: 
  - **Когда**: на стадии формирования требований.
  - **Стратегия**: оценка целей, задач, затрат.
  - **Анализ**: изучение структуры, документооборота, функций.

#### 29. Техническое задание: цель, состав, содержание по ГОСТ 34.602.
- **Ответ**: 
  - **Цель**: определение требований, порядка разработки, приемки.
  - **Состав**: 
    - Общие сведения.
    - Назначение, цели.
    - Характеристика объекта.
    - Требования.
    - Работы.
    - Контроль.
    - Подготовка.
    - Документирование.
    - Источники.

#### 30. Эскизный проект: содержание, целесообразность, документы.
- **Ответ**: 
  - **Содержание**: предварительные решения, документация.
  - **Целесообразность**: упрощает разработку, может быть исключен.
  - **Документы**: пояснительная записка, схемы (ГОСТ 34.201-89).

#### 31. Технический проект: состав, ТЗ на разработку ИС, стандарты.
- **Ответ**: 
  - **Состав**: решения, документация, задания смежникам.
  - **ТЗ**: см. вопрос 29.
  - **Стандарты**: ГОСТ 34.201-89, ГОСТ 34.602-89.

#### 32. Методология типового проектирования (ТПР) ИС: характеристика, стандарты, порядок.
- **Ответ**: 
  - **Характеристика**: создание ИС из готовых компонентов.
  - **Стандарты**: ГОСТ 34 (частично).
  - **Порядок**: анализ, выбор ТПР, настройка.

#### 33. Особенности классов ТПР: достоинства, недостатки.
- **Ответ**: 
  - **Классы**: 
    - Элементные: решения по задачам.
    - Подсистемные: автономные подсистемы.
    - Объектные: отраслевые проекты.
  - **Достоинства**: скорость, тиражируемость.
  - **Недостатки**: ограниченная гибкость.

#### 34. Параметрически-ориентированное проектирование как подход ТПР.
- **Ответ**: 
  - **Этапы**: анализ ППП, выбор, настройка.
  - **Критерии**: назначение, свойства, документация, затраты.

#### 35. Модельно-ориентированное проектирование как подход ТПР.
- **Ответ**: 
  - Адаптация ИС под модель объекта.
  - Использует репозиторий моделей (базовая, типовая, конкретная).
  - Инструменты: SAP BEW, BAAN.

#### 36. Базовая и типовые модели ИС в ТПР.
- **Ответ**: 
  - **Базовая модель**: описание функций, процессов, объектов.
  - **Типовые модели**: отраслевые конфигурации.

#### 37. Архитектура ИС: определение, состав, стандарты.
- **Ответ**: 
  - **Определение**: структура ИС, включающая компоненты и связи.
  - **Состав**: клиентская часть, сервер, БД, сеть.
  - **Стандарты**: ISO/IEC 42010.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 38. Централизованная архитектура и "файл-сервер": описание, анализ.
- **Ответ**: 
  - **Описание**: данные на одном сервере, клиенты обрабатывают локально.
  - **Анализ**: простота, но низкая масштабируемость.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 39. Двухзвенная и многозвенная архитектура "клиент-сервер": описание, анализ.
- **Ответ**: 
  - **Двухзвенная**: клиент и сервер (БД).
  - **Многозвенная**: добавлены промежуточные слои (приложения, сервисы).
  - **Анализ**: многозвенная — гибкая, но сложнее.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 40. Распределенная архитектура и с репликацией: описание, анализ.
- **Ответ**: 
  - **Описание**: данные распределены по узлам, репликация для надежности.
  - **Анализ**: высокая отказоустойчивость, но сложное управление.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 41. Методология SADT: особенности, история, принципы.
- **Ответ**: 
  - **Особенности**: функциональное моделирование, блочно-дуговая графика.
  - **История**: разработана Д. Россом, основа IDEF0.
  - **Принципы**: декомпозиция, ограничение блоков (3-6), разделение входов/управления.

#### 42. Нормативные документы для SADT в РФ: правила, ICOM-кодирование.
- **Ответ**: 
  - **Документы**: ГОСТ Р 50.1.028-2001 (IDEF0).
  - **ICOM-кодирование**: входы, выходы, управление, механизмы.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 43. Каноническое проектирование ИС: стандарты, модели ЖЦ.
- **Ответ**: 
  - **Стандарты**: ГОСТ 34.601-90, ГОСТ 34.602-89.
  - **Модель ЖЦ**: каскадная.

#### 44. Этапы канонического проектирования ИС: содержание, анализ.
- **Ответ**: 
  - **Содержание**: см. вопрос 21.
  - **Анализ**: структурирован, но негибок.

#### 45. Анализ и управление требованиями к ИС: характеристика, особенности.
- **Ответ**: 
  - **Характеристика**: сбор, фиксация требований.
  - **Особенности**: взаимодействие с заказчиком, ТЗ.

#### 46. Этапы типового проектирования ИС: содержание, анализ.
- **Ответ**: 
  - **Содержание**: анализ, выбор ТПР, настройка, внедрение.
  - **Анализ**: ускоряет разработку, но требует адаптации.

#### 47. Элементный метод ТПР: особенности, анализ.
- **Ответ**: 
  - **Особенности**: решения для задач/обеспечения.
  - **Анализ**: простота, ограниченная функциональность.

#### 48. Подсистемный метод ТПР: особенности, анализ.
- **Ответ**: 
  - **Особенности**: автономные подсистемы.
  - **Анализ**: автономность, сложность интеграции.

#### 49. Объектный метод ТПР: особенности, анализ.
- **Ответ**: 
  - **Особенности**: отраслевые проекты.
  - **Анализ**: полнофункционален, ресурсоемок.

#### 50. Параметрически-ориентированное проектирование: анализ.
- **Ответ**: 
  - См. вопрос 34. **Анализ**: эффективно для типовых задач.

#### 51. Модельно-ориентированное проектирование: анализ.
- **Ответ**: 
  - См. вопрос 35. **Анализ**: гибкое, требует ПО.

#### 52. Внедрение ИС при ТПР: особенности, характеристика.
- **Ответ**: 
  - **Особенности**: настройка типовых решений.
  - **Характеристика**: быстрое, зависит от ТПР.

#### 53. Использование бизнес-процессов при моделировании деятельности компании.
- **Ответ**: 
  - Модели: "as-is" (текущие процессы), "to-be" (с ИС).
  - Используются для анализа, оптимизации.

#### 54. История создания UML: цели.
- **Ответ**: 
  - **История**: разработан в 1990-х Г. Бучем, Дж. Рамбо, И. Якобсоном.
  - **Цели**: унификация моделирования ПО.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 55. Нотации UML: нормативный и ненормативный язык.
- **Ответ**: 
  - **Нормативный**: стандартные диаграммы (классы, процессы).
  - **Ненормативный**: расширения для специфических задач.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 56. Методология MSF: состав, достоинства, недостатки.
- **Ответ**: 
  - **Состав**: фазы (планирование, разработка, стабилизация).
  - **Достоинства**: гибкость, командная работа.
  - **Недостатки**: сложность для крупных проектов.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 57. Объектно-ориентированное проектирование: подходы, типы отношений UML.
- **Ответ**: 
  - **Подходы**: моделирование объектов через UML.
  - **Типы отношений**: ассоциация, агрегация, композиция.
  - В лекциях частично, дополнено общими знаниями.

#### 58. MSF vs PMBoK: сравнение, треугольник компромиссов.
- **Ответ**: 
  - **Сравнение**: MSF — итеративная, для ПО; PMBoK — универсальная.
  - **Треугольник**: время, стоимость, качество.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 59. Нормативный и ненормативный язык UML: динамические и статические диаграммы.
- **Ответ**: 
  - **Статические**: классы, компоненты.
  - **Динамические**: процессы, взаимодействия.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 60. Диаграмма классов UML: диаграммы для бизнес-логики.
- **Ответ**: 
  - Описывает объекты, их связи для бизнес-логики.
  - В лекциях частично, без деталей.

#### 61. Взаимоотношения в команде MSF: диаграмма, действующие лица, треугольник компромиссов.
- **Ответ**: 
  - **Диаграмма**: роли (разработчик, тестировщик, менеджер).
  - **Лица**: команда, заказчик.
  - **Треугольник**: время, стоимость, качество.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 62. Парадигма проектирования UML: статические и динамические методы.
- **Ответ**: 
  - **Статические**: структура системы.
  - **Динамические**: поведение системы.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 63. Типовое проектирование ИС: цель, тиражируемое решение.
- **Ответ**: 
  - **Цель**: создание ИС из готовых компонентов.
  - **Решение**: тиражируемое, настраиваемое.

#### 64. Диаграммы классов UML: правила, типы связей, комментарии.
- **Ответ**: 
  - **Правила**: классы, атрибуты, методы.
  - **Связи**: ассоциация, агрегация, композиция.
  - **Комментарии**: пояснения к модели.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 65. Методы ТПР: особенности, достоинства, недостатки.
- **Ответ**: 
  - **Методы**: элементный, подсистемный, объектный.
  - **Особенности**: см. вопросы 47–49.
  - **Достоинства**: скорость.
  - **Недостатки**: ограниченная гибкость.

#### 66. Каноническое и типовое проектирование: общее и различия.
- **Ответ**: 
  - **Общее**: цель — создание ИС.
  - **Различия**: 
    - Каноническое: уникальная разработка.
    - Типовое: готовые решения.

#### 67. Подобие UML и программного кода: интерпретация, ограничения.
- **Ответ**: 
  - **Подобие**: UML — визуализация кода.
  - **Ограничения**: не полная трансляция в код.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 68. Стандартизация UML: OMG, UML как язык программирования.
- **Ответ**: 
  - **OMG**: организация, стандартизирующая UML.
  - **UML**: язык моделирования, не программирования.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 69. Низкоуровневое моделирование с ДРАКОН: история, описание, особенности.
- **Ответ**: 
  - **История**: разработан в СССР для алгоритмов.
  - **Описание**: визуальный язык, упрощает логику.
  - **Особенности**: читаемость, простота.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 70. Параметрически-ориентированное проектирование: ППП, критерии оценки.
- **Ответ**: 
  - См. вопрос 34.

#### 71. Метамоделирование ИС: методология MOF, уровни.
- **Ответ**: 
  - **MOF**: стандарт OMG для метамоделей.
  - **Уровни**: M0 (данные), M1 (модель), M2 (метамодель), M3 (MOF).
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 72. Метод экспертной оценки ППП при параметрически-ориентированном проектировании.
- **Ответ**: 
  - Оценка ППП по критериям (функции, затраты) с помощью шкалы.

#### 73. Требования к программным системам: управление, границы проекта, формулирование.
- **Ответ**: 
  - **Управление**: сбор, фиксация через ТЗ.
  - **Границы**: в ТЭО, ТЗ.
  - **Формулирование**: текст, UML, BPMN.

#### 74. Функциональные и нефункциональные требования: характеристика, управление.
- **Ответ**: 
  - **Функциональные**: функции системы.
  - **Нефункциональные**: производительность, надежность.
  - **Управление**: фиксация, приоритизация.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 75. Стандарты управления проектами ИС: перечень, состав, особенности.
- **Ответ**: 
  - **Перечень**: ГОСТ Р ИСО/МЭК 12207, PMBoK.
  - **Состав**: процессы, документация.
  - **Особенности**: адаптация к проекту.

#### 76. PMBoK vs MSF: содержание, общие черты, отличия, модели ЖЦ.
- **Ответ**: 
  - **Содержание**: PMBoK — управление, MSF — разработка ПО.
  - **Общее**: управление проектами.
  - **Отличия**: PMBoK универсален, MSF итеративен.
  - **Модели**: PMBoK — гибкая, MSF — спиральная.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 77. Качество ПО: стандарты, модели, характеристики верхнего уровня.
- **Ответ**: 
  - **Стандарты**: ISO/IEC 25010.
  - **Модели**: функциональность, надежность, эффективность.
  - **Характеристики**: качество, безопасность.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 78. Модель качества Роберта Гласса: характеристики, расчет.
- **Ответ**: 
  - **Характеристики**: надежность, удобство, эффективность.
  - **Расчет**: метрики (ошибки, время).
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 79. ГОСТ Р ИСО/МЭК 25010-2015: характеристики, расчет.
- **Ответ**: 
  - **Характеристики**: функциональность, надежность, удобство.
  - **Расчет**: метрики качества.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 80. ГОСТ Р ИСО/МЭК 9126: характеристики, расчет.
- **Ответ**: 
  - **Характеристики**: функциональность, надежность, эффективность.
  - **Расчет**: количественные метрики.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 81–86. Характеристики ГОСТ Р ИСО/МЭК 9126 (функциональность, надежность, практичность, эффективность, сопровождаемость, мобильность).
- **Ответ**: 
  - **Функциональность**: выполнение задач.
  - **Надежность**: устойчивость к сбоям.
  - **Практичность**: удобство использования.
  - **Эффективность**: оптимальность ресурсов.
  - **Сопровождаемость**: легкость обновления.
  - **Мобильность**: переносимость.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 87–88. Риски при создании ИС: определение, стандарты, анализ.
- **Ответ**: 
  - **Определение**: бюджет, сроки, требования, специалисты.
  - **Стандарты**: PMBoK.
  - **Анализ**: идентификация, планирование, мониторинг.

#### 89–90. Риски проекта ИС: известные/неизвестные, деление по вероятности, матрица.
- **Ответ**: 
  - **Риски**: известные (бюджет), неизвестные (сбои).
  - **Деление**: вероятность/влияние.
  - **Матрица**: приоритизация рисков.

#### 91. Формулирование рисков: подходы MSF и PMBoK.
- **Ответ**: 
  - **PMBoK**: идентификация, анализ, реагирование.
  - **MSF**: итеративный анализ рисков.
  - В лекциях информации о MSF нет, ответ частично основан на общих знаниях.

#### 92. Управление рисками по PMI PMBoK: инструменты, этапы, результаты.
- **Ответ**: 
  - **Инструменты**: матрицы, планы.
  - **Этапы**: идентификация, анализ, мониторинг.
  - **Результаты**: снижение рисков.

#### 93. Управление рисками по MSF: инструменты, этапы, результаты.
- **Ответ**: 
  - **Инструменты**: итеративный анализ.
  - **Этапы**: выявление, планирование.
  - **Результаты**: минимизация рисков.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 94. Процессы управления рисками MSF: выявление, формулировка.
- **Ответ**: 
  - **Выявление**: анализ на итерациях.
  - **Формулировка**: описание, приоритизация.
  - В лекциях информации нет, ответ основан на общих знаниях.

#### 95. Идентификация рисков по PMBoK: этапы, структура, формулировка.
- **Ответ**: 
  - **Этапы**: сбор данных, анализ.
  - **Структура**: иерархия рисков.
  - **Формулировка**: описание, вероятность, последствия.